<div id='content'>

  <div class="item-container">
    <h2><%= @venue.name %></h2>
    <button data-bind='click: save'>Submit order</button>

      <div data-bind="foreach: items" /> 
        <div class="add-item" data-bind="click: $parent.addToCart">
           <div class="item-template"> 
            <div data-bind="attr: { class: item_id }">
              <div class="item-name-price">
                <h3>
                  <span data-bind="text: item_name"></span> - <span data-bind="text: item_price"></span>
                </h3>
              </div>
              <div class="item-description">
                <p data-bind="text: item_description"></p>
              </div>
            </div>
          </div>
        </div>
        <hr>
    </div>
    <hr>
  </div>

  <a href="#" class="scrollup" data-bind="visible: total() > 0, text: 'Checkout'"></a>
  
  <div data-bind="css: { 'navbar navbar-inner checkout' : total() > 0 } ">
    <div data-bind="foreach: cart">
      <div class="cart_item">
        <h4>
          <span data-bind="text:$data.quantity, css: 'item_quantity' "></span>
          <span data-bind="text:$data.product().item_name, css: 'item_name' "></span>
          <span data-bind="css:, 'item_price'"> - $<span data-bind="text:$data.product().item_price"></span></span>
        </h4>
      </div>
    </div>
    <form action="/charge" method="post" class="payment" data-bind="visible: total() > 0">
      <article>
        <h4 style="text-align:center" data-bind="visible: total() > 0">
          Total: $<span data-bind="text: total()"></span>
        </h4>
      </article>
      <a href="#" class="clear_cart" data-bind="click: clearCart">Clear Checkout</a>
      <script src="https://checkout.stripe.com/checkout.js"></script>
      <span id="customButton" class="btn btn-info" data-bind="script: 'stripe'">Pay with card</span>
    </form>
  </div>
</div>

<script type="text/javascript">
  ko.bindingHandlers.script = {
      init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {
          class_name = 'stripe-button active';
          data_key = '<%= (settings.publishable_key) %>';
          data_name = 'restlessnapkin';
          data_description = '<%= (@venue.name) %>';
          data_amount = viewModel.total() * 100;
          data_image = 'https://si0.twimg.com/profile_images/1104245949/restless_napkin_avatar.png';

          var handler = StripeCheckout.configure({
            key: data_key,
            image: data_image,
            token: function(token, args) {
              // Use the token to create the charge with a server-side script.
            }
          });

          document.getElementById('customButton').addEventListener('click', function(e) {
            // Open Checkout with further options
            handler.open({
              name: data_name,
              description: data_description,
              amount: data_amount
            });
            e.preventDefault();
          });

      },
      update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
          class_name = 'stripe-button active';
          data_key = '<%= (settings.publishable_key) %>';
          data_name = 'restlessnapkin';
          data_description = '<%= (@venue.name) %>';
          data_amount = viewModel.total() * 100;
          data_image = 'https://si0.twimg.com/profile_images/1104245949/restless_napkin_avatar.png';

          var scriptName = ko.utils.unwrapObservable(valueAccessor());
          var scriptTag = '<script type="text/javascript" src="' + scriptName + '"' + 
                            ' class="' + class_name + '"' + 
                            ' data-key="' + data_key + '"' + 
                            ' data-name="' + data_name + '"' + 
                            ' data-description="' + data_description + '"' + 
                            ' data-amount="' + data_amount + '"' + 
                            ' data-image="' + data_image + '"><\/script>';
          
      }
  }

  function formatCurrency(value) {
      return "$" + value.toFixed(2);
  }

  function CartItem(item, quantity){
    var self = this; // Scope Trick
 
    self.product  = ko.observable(item);
    self.quantity = ko.observable(quantity || 1);
   
    self.cost = ko.computed(function(){
      return self.product().item_price() * self.quantity();
    });
  }

  function Item(cosa){
    var self = this;
    self.item = ko.observable(cosa);
    self.item_id = ko.observable(cosa.id);
    self.item_name = ko.observable(cosa.name);
    self.item_price = ko.observable(cosa.price);
    self.item_description = ko.observable(cosa.description);
  }

  function ItemsViewModel(items){
    var self = this;
    self.items = ko.observableArray(); 
    self.cart  = ko.observableArray();

    var mappedItems = $.map(items, function (item) {
        var this_item = item.menu_item;
        var cosa = {
            created_at: this_item.created_at, description: this_item.description, 
            id: this_item.id, name: this_item.name, updated_at: this_item.updated_at, 
            venue_id: this_item.venue_id, price: this_item.price
        };
        return new Item(cosa);
    });

    self.items = ko.observableArray(mappedItems);

    self.save = function() {
        var dataToSave = $.map(self.cart(), function (item) {
            return item.product() ? {
                quantity: item.quantity(),
                item: item.product().item_name()
            } : undefined
        });
        alert("Could now send this to server: " + JSON.stringify(dataToSave));
    };

    self.subtotal = ko.computed(function(){
        var subtotal = 0;
        $(self.cart()).each(function(index, cart_item){
          if(cart_item.quantity() > 1){
            subtotal += cart_item.cost();
          }
          else{
            subtotal += cart_item.cost() * cart_item.quantity();
          }
        });

        return subtotal;
    });

    self.total = ko.computed(function(){
      return self.subtotal();
    });

    self.addToCart = function(item, event) {
      var current_cart = self.cart();

      var oldCartItems = ko.utils.arrayFirst(self.cart(), function (cosa) {
          return cosa.product().item_id() == item.item_id();
      });
      
      if(oldCartItems != undefined){
        self.cart.replace(oldCartItems, new CartItem(item, oldCartItems.quantity() + 1));
      }
      else{
        var _item = new CartItem(item, 1);
        self.cart.push(_item);
      }

      var jsonCart = ko.toJSON(self.cart());
    };

    self.removeFromCart = function(cart_item, event) {
      self.cart.remove(cart_item);
    };

    self.clearCart = function () {
        self.cart([]);
    };
  }

  item_json = <%= (@item.to_json) %>;
  
  ko.applyBindings(new ItemsViewModel(item_json));
</script>

<script type="text/javascript">
    $(document).ready(function(){ 
 
        $(window).scroll(function(){
            if ($(this).scrollTop() > 100) {
                $('.scrollup').fadeIn();
            } else {
                $('.scrollup').fadeOut();
            }
        }); 
 
        $('.scrollup').click(function(){
            $("html, body").animate({ scrollTop: 0 }, 600);
            return false;
        });
 
    });
</script>

<style type="text/css">
.cart_item h4, .payment article h4{
  color: white;
}

.item_quantity{
  padding: 0 10px 0 10px;
  background-color: #C5C5C5;
  color: #000;
  border-radius: 20px;
}

.clear_cart, .clear_cart:hover {
  text-decoration: none;
  color: #F00;
  border: 1px #F00 solid;
  padding: 5px;
}

.payment article h3{
  font-weight: normal !important;
}

.item-container h2{
  border-bottom: 5px solid #CCC;
}

.scrollup, .scrollup:hover{
    width: 9%;
    height: 40px;
    position: fixed;
    top: 48%;
    left: 55%;
    display: none;
    color: #FFF !important;
    background-color: #1B2125;
    border-radius: 21px;
    text-decoration: none;
    text-indent: 75px;
}
</style>